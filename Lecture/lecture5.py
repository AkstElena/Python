# -*- coding: utf-8 -*-
"""Lecture5

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qKQeDRjip66DIAjsxZ0ZY4uU5Z7sWhPs
"""

import pandas as pd

#читаем
df = pd.read_csv('sample_data/california_housing_train.csv')

df.head(n = 10)

df.tail(n=2)

df.shape

df.isnull()

df.isnull().sum()

df.dtypes

df.columns

df['longitude']

df[['housing_median_age', 'population']]

"""Задание: Необходимо вывести столбец total_rooms, у которого медианный
возраст здания(housing_median_age) меньше 20.
"""

df[df['housing_median_age']<20]

df[df['housing_median_age']<20]['total_rooms']

df[(df['housing_median_age']<20) & (df['housing_median_age']>10)]['total_rooms']

df[(df['housing_median_age']<20) & (df['housing_median_age']>10)][['total_rooms', 'housing_median_age']]

print(df['population'].max())

print(df['population'].min())

print(df['population'].mean())

print(df['population'].sum())

print(df[['population', 'total_rooms']].median())

df.describe()

"""count - Общее кол-во не пустых строк

mean - среднее значение в столбце

std - стандартное отклонение от среднего значения

min - минимальное значение

max - максимальное значение

Числа 25%, 50%, 75% - перцентили

"""

import seaborn as sns

sns.scatterplot(data=df, x='longitude', y='latitude')

sns.scatterplot(data=df, x='households', y='population', hue ='total_rooms')

sns.scatterplot(data=df, x='households', y='population', hue ='total_rooms', size=10)

cols = ['population', 'median_income', 'housing_median_age', 'median_house_value']
g = sns.PairGrid(df[cols])
g.map(sns.scatterplot)

sns.relplot(x="latitude", y="median_house_value", kind="line", data=df)

sns.relplot(x = 'longitude', y = 'median_house_value', kind = 'line', data = df)

sns.scatterplot(data=df, x="latitude", y="longitude", hue="median_house_value")

sns.histplot(data=df, x="median_income")

sns.histplot(data = df, x = 'housing_median_age')

sns.histplot(data=df[df['housing_median_age']>50], x="median_income")

df.loc[df['housing_median_age'] <= 20, 'age_group'] = 'Молодые'
df.loc[(df['housing_median_age'] > 20) & (df['housing_median_age'] <= 50),
'age_group'] = 'Ср. возраст'
df.loc[df['housing_median_age'] > 50, 'age_group'] = 'Пожилые'

df.columns

df.head()

df.groupby('age_group')['median_income'].mean().plot(kind='bar')

df.loc[df['median_income'] > 6, 'income_group'] = 'rich'
df.loc[df['median_income'] < 6, 'income_group'] = 'everyone_else'

df.columns

sns.displot(df, x="median_house_value", hue="income_group")



